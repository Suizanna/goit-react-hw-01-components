{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/statistical.module.css","components/FriendList/friendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Container/Container.module.css","images/default-avatar.svg","components/Profile/Profile.js","components/Statistics/getRandomColor.js","components/Statistics/Statistics.js","components/Container/Container.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","defaultAvatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","getRandomColor","r","Math","round","random","g","b","Statistics","title","statistics","stat_list","map","stat","item","style","backgroundColor","RGB","percentage","id","Container","children","s","container","FriendList","friends","friend_list","friend","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","history","heading","cell","type","amount","currency","prototype","PropTypes","arrayOf","shape","number","isRequired","string","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41cd2715.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3gB7t\",\"description\":\"Profile_description__1Koqs\",\"avatar\":\"Profile_avatar__35iAV\",\"name\":\"Profile_name__JZ_qR\",\"tag\":\"Profile_tag__1rBAE\",\"location\":\"Profile_location__18mhd\",\"stats\":\"Profile_stats__zkJ8S\",\"list\":\"Profile_list__wQled\",\"label\":\"Profile_label__34NZi\",\"quantity\":\"Profile_quantity__XoIMm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistical_statistics__1FMy0\",\"title\":\"statistical_title__uQSX7\",\"stat_list\":\"statistical_stat_list__115iG\",\"item\":\"statistical_item__9-6l3\",\"label\":\"statistical_label__1Gd1P\",\"percentage\":\"statistical_percentage__1rpH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"friendList_friend_list__x5Han\",\"item\":\"friendList_item__23sVf\",\"statusOnline\":\"friendList_statusOnline__1EdHK\",\"statusOffline\":\"friendList_statusOffline__1a4hu\",\"avatar\":\"friendList_avatar__3B49G\",\"name\":\"friendList_name__2UnQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__pCjav\",\"heading\":\"TransactionHistory_heading__2pBYi\",\"cell\":\"TransactionHistory_cell__2LIpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1WanI\"};","export default __webpack_public_path__ + \"static/media/default-avatar.f8b384b5.svg\";","//пакет react\r\n//уже не нужен в 17 версии React. Теперь используем jsx.\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport defaultAvatar from \"../../images/default-avatar.svg\";\r\nimport styles from './Profile.module.css';\r\n\r\n//Компонент должен создавать DOM элемент следующей структуры. Шаблон, который хочу рендерит\r\nconst Profile = ({ name, tag, location, avatar = defaultAvatar, stats }) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>@{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;","\r\nconst getRandomColor = () => {\r\n    const r = Math.round(Math.random() * 256);\r\n    const g = Math.round(Math.random() * 256);\r\n    const b = Math.round(Math.random() * 256);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\nexport default getRandomColor;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RGB from './getRandomColor';\r\nimport styles from './statistical.module.css';\r\n\r\n\r\n//Компонент должен создавать DOM элемент следующей структуры.Шаблон, который хочу рендерит\r\n//Компонент должен принимать два пропа title и stats, заголовок и объект статистики.\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n\r\n    <ul className={styles.stat_list}>\r\n      {stats.map(stat => (\r\n        <li className={styles.item} key={stat.id} style={{ backgroundColor: `${RGB()}` }}>\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default Statistics;\r\n\r\n","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friendList.module.css';\r\n\r\n// Компонент должен принимать один проп friends - массив объектов друзей.\r\n// Компонент должен создавать DOM следующей структуры.\r\n\r\nconst FriendList = ({ friends }) => (\r\n    <ul className={styles.friend_list}>\r\n        {friends.map(friend => (\r\n            <li className={styles.item} key={friend.id}>\r\n                <span\r\n                    className={\r\n                        friend.isOnline ? styles.statusOnline : styles.statusOffline\r\n                    }\r\n                ></span>\r\n                <img className={styles.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\r\n                <p className={styles.name}>{friend.name}</p>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default FriendList;\r\n","// import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\n\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n    return (\r\n        <table className={styles.history}>\r\n            <thead className={styles.heading}>\r\n                <tr>\r\n                    <th className={styles.cell}>Type</th>\r\n                    <th className={styles.cell}>Amount</th>\r\n                    <th className={styles.cell}>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {items.map(({ id, type, amount, currency }) => (\r\n                    <tr key={id}>\r\n                        <td>{type}</td>\r\n                        <td>{amount}</td>\r\n                        <td>{currency}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\n\r\nTransactionHistory.prototype = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\n\r\nexport default TransactionHistory;","import Profile from \"./components/Profile/Profile\";\nimport user from './components/Profile/user.json';\n\nimport Statistics from \"./components/Statistics/Statistics\";\nimport statisticalData from \"./components/Statistics/statistical-data.json\";\n\nimport Container from './components/Container/Container';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\n\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\n//главный компонент. один файл, один компонент. пропсы\nconst App = () => (\n  <Container>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n\n    <Statistics title=\"Upload stats\" stats={statisticalData} />;\n    <Statistics stats={statisticalData} />;\n    <FriendList friends={friends} />,\n    <TransactionHistory items={transactions} />\n  </Container>\n);\n\n//это модуль и из него нужно экспорт компонент\n//и всегда это экспорт по умолчанию\nexport default App;\n\n\n\n","import React from \"react\";\n\n//пакет react-dom рендерит react-элементы в настоящие DOM-дерево\nimport ReactDOM from \"react-dom\"; // есть метод ReactDOM.render /метод рендерит компонент App \nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// 2 вар метод рендерит компонент App \n// ReactDOM.render(<App />, document.querySelector('#root'));\n\n//<React.StrictMode>  это компонент оборачиваетвсе приложение в строгий режим \n\n\n\n\n"],"sourceRoot":""}